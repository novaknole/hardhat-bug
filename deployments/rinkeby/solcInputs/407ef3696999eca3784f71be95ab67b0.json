{
  "language": "Solidity",
  "sources": {
    "contracts/Test2.sol": {
      "content": "/*\n * SPDX-License-Identifier:    GPL-3.0\n */\n\npragma solidity 0.6.8;\npragma experimental ABIEncoderV2;\n\n\nabstract contract ERC1271 {\n   \n}\n\ncontract Test {\n    \n    constructor(uint x1, uint x2) public {\n       \n    }\n\n    function _registerStandard(bytes4 _interfaceId) internal {\n        \n    }\n\n    function initialize(address _initialExecutor) public {\n        uint x = 20202023;\n        _registerStandard(type(ERC1271).interfaceId); \n    } \n}\n\n\ncontract Test2 {\n    address public base;\n\n    constructor() public {\n        setupBases();\n    }\n\n    function setupBases() private {\n        base = address(new Test(10, 20));\n    }\n}\n\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 20000
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}