/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Test } from "../Test";

export class Test__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    x1: BigNumberish,
    x2: BigNumberish,
    overrides?: Overrides
  ): Promise<Test> {
    return super.deploy(x1, x2, overrides || {}) as Promise<Test>;
  }
  getDeployTransaction(
    x1: BigNumberish,
    x2: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(x1, x2, overrides || {});
  }
  attach(address: string): Test {
    return super.attach(address) as Test;
  }
  connect(signer: Signer): Test__factory {
    return super.connect(signer) as Test__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Test {
    return new Contract(address, _abi, signerOrProvider) as Test;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516100df3803806100df83398101604081905261002f91610036565b5050610059565b60008060408385031215610048578182fd5b505080516020909101519092909150565b6078806100676000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b60336035565b005b61205a603f600081565b5056fea26469706673582212203ec6efa83defbe5dcd1cccf00b65909c02967dd9c1eebdc6fec0d821ea7a37e064736f6c63430006080033";
